{% extends 'base.html.twig' %}

{% block title %}Participant index{% endblock %}

{% block body %}
    {% for label, messages in app.flashes %}
        {% for message in messages %}
            <div class="flash-notice bg-green fg-white padding10 text-shadow">
                &nbsp;{{ message }}
            </div>
        {% endfor %}
    {% endfor %}
    <h1>Liste des utilisateurs</h1>

    <table id="datagrid" class="table striped table-border mt-4"
           data-role="table"
           data-rows="5"
           data-rows-steps="5, 10, 30"
           data-show-activity="false"
           data-rownum="true"
           data-check="true"
           data-check-style="2"
           data-table-info-title="Afficher $1 à $2 de $3 entrées"
           data-horizontal-scroll="true"
    >
        <thead>
            <tr>
{#                <th>Id</th>#}
                <th data-sortable="true" data-sort-dir="asc">Pseudo</th>
                <th data-sortable="true" data-sort-dir="asc">Nom</th>
                <th data-sortable="true" data-sort-dir="asc">Prénom</th>
                <th>Téléphone</th>
                <th>Email</th>
                <th>Actif</th>
                <th>Admin</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        {% for participant in participants %}
            <tr>
{#                <td>{{ participant.id }}</td>#}
                <td>{{ participant.pseudo }}</td>
                <td>{{ participant.nom }}</td>
                <td>{{ participant.prenom }}</td>
                <td>{{ participant.telephone }}</td>
                <td>{{ participant.mail }}</td>
                <td>{{ participant.actif ? 'Oui' : 'Non' }}</td>
                <td>{{ participant.admin ? 'Oui' : 'Non' }}</td>
                <td>
                    <a class="button info" title="Afficher utilisateur" href="{{ path('participant_show', {'id': participant.id}) }}"><span class="mif-eye mif-2x"></span></a>
                    <a class="button warning" title="Modifier utilisateur" href="{{ path('participant_edit', {'id': participant.id}) }}"><span class="mif-pencil mif-2x"></span></a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="12">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    <!-- Actions -->
    <a class="button success" href="{{ path('participant_new') }}" title="Créer utilisateur"><span class="mif-user-plus mif-2x"></span></a>
    <button class="button alert" onclick="deleteUsers()" title="Supprimer utilisateurs"><span class="mif-user-minus mif-2x"></span></button>
    <button class="button warning" onclick="disableUsers()" title="Désactiver utilisateurs"><span class="mif-cancel mif-2x"></span></button>
    <button class="button info" onclick="enableUsers()" title="Activer utilisateurs"><span class="mif-plus mif-2x"></span></button>

    <button class="button primary"
            onclick="Metro.dialog.open('#importCsv')">Importer CSV</button>

    <!-- Dialog box with import form -->
    <div class="dialog" data-role="dialog" data-close-button="true" id="importCsv">
        <div class="dialog-title">Importer à partir d'un fichier CSV</div>
        <div class="dialog-content">
            {{ form_start(import_form, {'attr': {'id': 'import-form'}}) }}
            <div id="import-error" style="color: red"></div>
            {{ form_row(import_form.csvfile) }}
        </div>
        <div class="dialog-actions">
            <button class="button success" title="Importer des utilisateurs">Importer</button>
            {{ form_end(import_form) }}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>

        $('#import-form').submit(function(e) {

            e.preventDefault();
            let extension = document.getElementById("form_csvfile").value.split('.').pop();
            if (extension !== "csv"){
                document.getElementById("import-error").innerHTML = "Format invalid ! Choisissez un fichier .csv !";
            }else{
                document.forms["import-form"].submit();
            }
        });

        function enableUsers(){
            changeStatus('enable');
        }
        function disableUsers(){
            changeStatus('disable');
        }
        function deleteUsers(){
            changeStatus('delete');
        }

        function changeStatus(status){
            let tableData = $('#datagrid').data('table').getSelectedItems();
            let users = {};
            for (let i = 0; i < tableData.length; i++){
                users[i] = {
                    pseudo: tableData[i][0]
                }
            }

            let xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function() {
                if (this.readyState === 4 && this.status === 200) {
                    //TODO: reload the table component and not the full page
                    document.location.reload();
                    // let table = Metro.getPlugin('#datagrid', 'table');
                    // // table.clear();
                }
            };
            let path = "{{ path('participant_status', {'status': 0}) }}";
            let url = path.replace("0", status);
            xhttp.open("POST", url, true);
            xhttp.send(JSON.stringify(users));
        }

    </script>

{% endblock %}

